

protocol: https
tls:
    rootSecret:
    secret: 
    issuer: 

domain: dev.eloprindelse.dk
redirectDomainTo: https://app.dev.eloprindelse.dk
debug: 1

email:
    sendgridKey: _
    support: _
    senderAddress: noreply@eloprindelse.dk
    senderName: Eloprindelse
    
# An AppInsights instrumentation key can be added.
instrumentationKey: 

eloverblik:
  service: 'https://apipreprod.eloverblik.dk/ThirdPartyApi'
  onboarding: 'https://preprod.eloverblik.dk/Authorization/authorization'
  thirdpartyid: 'GUIIntroThirdParty01TpId'
  # This is a token in the public test system, you an generate your own if this is out of date.
  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlblR5cGUiOiJUSElSRFBBUlRZQVBJX1JlZnJlc2giLCJ0b2tlbmlkIjoiNzIyMjI1NDktNTFmZi00ZjI0LWEwOTYtMmU1MWM2OTRkYmFhIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZWlkZW50aWZpZXIiOiJHVUlJbnRyb1RoaXJkUGFydHkwMSIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL2dpdmVubmFtZSI6IkZvcm5hdm4iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9zdXJuYW1lIjoiRWZ0ZXJuYXZuIiwianRpIjoiNzIyMjI1NDktNTFmZi00ZjI0LWEwOTYtMmU1MWM2OTRkYmFhIiwiY3ZyIjoiMjcwNzE0MDEiLCJ0cGlkIjoiR1VJSW50cm9UaGlyZFBhcnR5MDFUcElkIiwibG9naW5UeXBlIjoiS2V5Q2FyZCIsImV4cCI6MTYxOTYwNjUwMCwiaXNzIjoiRW5lcmdpbmV0IiwidG9rZW5OYW1lIjoibnktdGVzdC10b2tlbiIsInJvbGVzIjoiUmVhZFByaXZhdGUsIFJlYWRCdXNpbmVzcyIsImF1ZCI6IkVuZXJnaW5ldCJ9.TeN20r7yej0WGZu87flUdV4TGoJAOp7UQN2nLoiG0-M
  requestAccessFrom: '2020-04-01'
  requestAccessTo: '2020-12-31'

postgres:
  usernamePostfix: ''
  properties: '?sslmode=disable'

services:

  account:
    name: account
    ingress: 
      subdomain: account
    database: true
    grafanaRead: true
    flaskSecret: true
    webhookSecret: true
    hydraClient:
      name: "Account Service"
      callback: /auth/login/callback
    ports:
      - name: 'http'
        port: 80
        targetPort: 8085

  datahub:
    name: datahub
    ingress: 
      subdomain: datahub
    database: true
    grafanaRead: true
    flaskSecret: true
    ports:
      - name: 'http'
        port: 80
        targetPort: 8089
  
  energyType:
    name: energy-type
    ports:
      - name: 'http'
        port: 80
        targetPort: 8765

  exampleBackend:
    name: example-backend
    ingress: 
      subdomain: api-app
    database: true
    grafanaRead: true
    flaskSecret: true
    webhookSecret: true
    hydraClient:
      name: "Example Backend"
      callback: /auth/login/callback
    ports:
      - name: 'http'
        port: 80
        targetPort: 8081

  exampleFrontend:
    name: example-frontend
    ingress: 
      subdomain: app
    ports:
      - name: 'http'
        port: 80
        targetPort: 80

  identity:
    name: identity
    ingress: 
      subdomain: identity
    database: true
    grafanaRead: true
    flaskSecret: true
    ports:
      - name: 'http'
        port: 80
        targetPort: 9120

  hydra:
    name: hydra
    ingress: 
      subdomain: oauth
    database: true
    flaskSecret: true
    ports:
      - name: 'public-interface'
        port: 80
        targetPort: 4444
      - name: 'admin-interface'
        port: 4445
        targetPort: 4445
    
  ledger:
    name: hyperledger
    ports:
      - name: 'http'
        port: 80
        targetPort: 8008

  grafana:
    name: grafana
    ingress: 
      subdomain: grafana
    database: true
    sslmode: 'require'
    ports:
      - name: 'http'
        port: 80
        targetPort: 3000
